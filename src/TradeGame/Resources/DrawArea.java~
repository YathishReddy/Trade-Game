import java.awt.*;
import javax.swing.*;
import javax.imageio.*;
import java.io.*;
import java.util.ArrayList;

class DrawArea extends JPanel
{
    ArrayList board;
    Player[] list;
    public DrawArea (Player[] l, Board tiles)
    {
	this.setPreferredSize (new Dimension (700, 703));
	board = tiles.getBoard ();
	list = l;
    }


    public void paintComponent (Graphics g)
    {
	Image img;
	img = loadImage ("Board3.png");
	g.drawImage (img, 0, 0, null);
	Player[] p = Monopoly.getPlayerList ();
	Board tiles = Monopoly.getBoard ();
	for (int x = 0 ; x < Monopoly.getPlayerNumber () + 1 ; x++)
	{
	    Square s = (Square) (tiles.get (p [x].getCurrentPos ()));
	    int x1 = ((s.getRight () + s.getLeft ()) / 2) - 73;
	    int y = ((s.getUp () + s.getDown ()) / 2) - 60;
	    System.out.println (x1 + "" + y);
	    g.drawImage (p [x].getIcon (), x1, y, null);
	    s.drawHouse (g);
	}
	Image house = loadImage ("house.gif");

	for (int x = 0 ; x < tiles.size () ; x++)
	{
	    Square s = (Square) (tiles.get (x));
	    int x2 = s.getHousesOwned ();
	    if (x2 > 0)
	    {
		for (int x12 = 0 ; x12 < x2 ; x12++)
		{
		    int posx = x12 * 15;
		    int posy = x12 * 15;
		    System.out.println (s.getName () + ", #" + s.getHousesOwned ());
		    if (s.getIndex () > 30)
			g.drawImage (house, s.getLeft () - 53, (s.getDown () - 30) + posy, null);
		    else if (s.getIndex () > 20)
			g.drawImage (house, (s.getLeft () - 53) + posx, s.getDown () + 27, null);

		    else if (s.getIndex () > 10)
			g.drawImage (house, s.getRight () - 73, (s.getUp () - 50) + posy, null);
		    else
			g.drawImage (house, (s.getRight () - 113) + posx, s.getUp () - 120, null);

		}
	    }

	}


	public Image loadImage (String file)  // this method reads and loads the image
	{
	    try
	    {
		return (ImageIO.read (new File (file)));
	    }
	    catch (IOException e)
	    {
		System.out.println ("Error: File " + file + " not found.");
		return null;
	    }
	}
    }


